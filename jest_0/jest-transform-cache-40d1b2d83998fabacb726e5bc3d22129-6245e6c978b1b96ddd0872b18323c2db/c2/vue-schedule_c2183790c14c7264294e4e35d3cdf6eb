578f8b1f27738d7c82d2324f5f8240b7
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _moment = require("moment");

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    props: {
        timeGround: {
            coerce: function coerce(value) {
                if (value && value.length == 2) {
                    var startTime = value[0].split(":")[0] * 1,
                        endTime = value[1].split(":")[0] * 1;
                    value = [];
                    for (var i = startTime; i <= endTime; i++) {
                        var hour = i < 10 ? "0" + i : "" + i;
                        value.push(hour + ":00");
                    }
                } else {
                    value = ["09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00"];
                }
                return value;
            }
        },
        weekGround: {
            type: Array,
            default: ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche']
        },

        color: {
            type: Array,
            default: function _default() {
                return ["#ff8000", "#00ff40", "#0080ff", "#8000ff", "#ff00bf", "#6e1a12", "#004f3a", "#6666ff", "#0066cc", "#134d00", "#ffa111", "#b200a4"];
            }
        },
        taskDetail: {
            type: Array,
            default: []
        }
    },
    data: function data() {
        return {
            showModal: false,
            showModalDetail: {
                dateStart: '09:30',
                dateEnd: '10:30',
                title: 'Metting',
                week: 'Lundi',
                styleObj: {
                    backgroundColor: "#903749"
                },
                detail: 'Metting (German: Mettingen) is a commune in the Moselle department in Grand Est in north-eastern France.'
            },
            taskListSty: {
                height: '800px'
            },
            timeListSty: {
                width: '100%'
            },
            tasksList: [],
            taskIndex: 0
        };
    },
    created: function created() {},
    mounted: function mounted() {
        this.$nextTick(function () {
            var _self = this;
            _self.taskListSty.height = (_self.timeGround.length - 1) * 100 + 'px';
            _self.timeListSty.width = _self.weekGround.length * 14.28 + '%';
            _self.init();
        });
    },

    methods: {
        init: function init() {
            var _self = this,
                maxTime = _self.timeGround[_self.timeGround.length - 1],
                minTime = _self.timeGround[0],
                maxMin = maxTime.split(':')[0] * 60 + maxTime.split(':')[1] * 1,
                minMin = minTime.split(':')[0] * 60 + minTime.split(':')[1] * 1;

            for (var i = 0; i < _self.taskDetail.length; i++) {
                _self.tasksList[i] = [];
                _self.taskIndex = 0;
                _self.setTaskDay(i, maxMin, minMin);
            }
        },
        setTaskDay: function setTaskDay(i, maxMin, minMin) {
            var _self = this;
            for (var j = 0; j < _self.taskDetail[i].length; j++) {
                _self.tasksList[i][_self.taskIndex] = {};
                if (_self.taskDetail[i][j].hasOwnProperty('dateStart')) {
                    var startMin = _self.taskDetail[i][j].dateStart.split(':')[0] * 60 + _self.taskDetail[i][j].dateStart.split(':')[1] * 1,
                        endMin = _self.taskDetail[i][j].dateEnd.split(':')[0] * 60 + _self.taskDetail[i][j].dateEnd.split(':')[1] * 1;
                    if (startMin < minMin || endMin > maxMin) {
                        _self.taskIndex--;
                        continue;
                    }
                    var difMin = endMin - startMin,
                        startAt = _self.taskDetail[i][j].dateStart.split(":"),
                        endAt = _self.taskDetail[i][j].dateEnd.split(":");
                    _self.tasksList[i][_self.taskIndex].dateStart = startAt[0] + ':' + startAt[1];
                    _self.tasksList[i][_self.taskIndex].dateEnd = endAt[0] + ':' + endAt[1];
                    _self.tasksList[i][_self.taskIndex].title = _self.taskDetail[i][j].title;
                    _self.tasksList[i][_self.taskIndex].styleObj = {
                        height: difMin * 100 / 60 + 'px',
                        top: (startMin - (_self.timeGround[0].split(":")[0] * 60 + _self.timeGround[0].split(":")[1] * 1)) * 100 / 60 + 50 + 'px',
                        backgroundColor: _self.color[~~(Math.random() * _self.color.length)],
                        left: 3.8 + 13.80 * i + '%',
                        width: '12.28%'
                    };
                    _self.taskIndex++;
                }
            }
        }
    },
    watch: {
        taskDetail: function taskDetail() {
            var _self = this;
            _self.init();
        }
    }
}; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"schedule"},[_c('div',{staticClass:"time-ground"},[_c('ul',{staticStyle:{"list-style-type":"none"}},_vm._l((_vm.timeGround),function(time){return _c('li',[_c('span',[_vm._v(_vm._s(time))]),_vm._v(" "),_c('p',{style:(_vm.timeListSty)})])}))]),_vm._v(" "),_c('div',{staticClass:"task-ground"},[_c('ul',{staticStyle:{"list-style-type":"none"}},_vm._l((_vm.weekGround),function(week,index){return _c('li',{staticClass:"task-list"},[_c('p',[_vm._v(" "+_vm._s(week)+" ")]),_vm._v(" "),_c('ul',{style:(_vm.taskListSty)},[_vm._l((_vm.tasksList[index]),function(detail){return [(detail.hasOwnProperty('styleObj'))?_c('li',{staticClass:"task-list-item",style:(detail.styleObj)},[_c('p',[_vm._v(" "+_vm._s(detail.dateStart)+" - "+_vm._s(detail.dateEnd))]),_vm._v(" "),_c('h5',[_vm._v(" "+_vm._s(detail.title)+" ")])]):_vm._e()]})],2)])}))])])}
__vue__options__.staticRenderFns = []

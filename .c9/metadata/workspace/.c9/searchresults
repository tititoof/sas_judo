{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001carbon\u0001 in\u0001/vendor\u0001 (Found 488 matches in 111 files)\n\n/vendor/composer/autoload_psr4.php:\n\t49:     'Carbon\\\\' => array($vendorDir . '/nesbot/carbon/src/Carbon'),\n\n/vendor/composer/autoload_static.php:\n\t106:             'Carbon\\\\' => 7,\n\t281:         'Carbon\\\\' => \n\t283:             0 => __DIR__ . '/..' . '/nesbot/carbon/src/Carbon',\n\n/vendor/composer/installed.json:\n\t340:         \"name\": \"nesbot/carbon\",\n\t345:             \"url\": \"https://github.com/briannesbitt/Carbon.git\",\n\t350:             \"url\": \"https://api.github.com/repos/briannesbitt/Carbon/zipball/7cdf42c0b1cc763ab7e4c33c47a24e27c66bfccc\",\n\t372:                 \"Carbon\\\\\": \"src/Carbon/\"\n\t387:         \"homepage\": \"http://carbon.nesbot.com\",\n\t3341:             \"nesbot/carbon\": \"~1.0\",\n\t4280:             \"nesbot/carbon\": \"~1.20\",\n\n/vendor/fzaninotto/faker/src/Faker/Provider/es_ES/Person.php:\n\t56:         'Abad', 'Abeyta', 'Abrego', 'Abreu', 'Acevedo', 'Acosta', 'Acuña', 'Adame', 'Adorno', 'Agosto', 'Aguado', 'Aguayo', 'Aguilar', 'Aguilera', 'Aguirre', 'Alanis', 'Alaniz', 'Alarcón', 'Alba', 'Alcala', 'Alcaraz', 'Alcántar', 'Alejandro', 'Alemán', 'Alfaro', 'Alfonso', 'Alicea', 'Almanza', 'Almaraz', 'Almonte', 'Alonso', 'Alonzo', 'Altamirano', 'Alva', 'Alvarado', 'Amador', 'Amaya', 'Anaya', 'Andreu', 'Andrés', 'Anguiano', 'Angulo', 'Antón', 'Aparicio', 'Apodaca', 'Aponte', 'Aragón', 'Aranda', 'Araña', 'Arce', 'Archuleta', 'Arellano', 'Arenas', 'Arevalo', 'Arguello', 'Arias', 'Armas', 'Armendáriz', 'Armenta', 'Armijo', 'Arredondo', 'Arreola', 'Arriaga', 'Arribas', 'Arroyo', 'Arteaga', 'Asensio', 'Atencio', 'Avilés', 'Ayala', 'Baca', 'Badillo', 'Baeza', 'Bahena', 'Balderas', 'Ballesteros', 'Banda', 'Barajas', 'Barela', 'Barragán', 'Barraza', 'Barrera', 'Barreto', 'Barrientos', 'Barrios', 'Barroso', 'Batista', 'Bautista', 'Bañuelos', 'Becerra', 'Beltrán', 'Benavides', 'Benavídez', 'Benito', 'Benítez', 'Bermejo', 'Bermúdez', 'Bernal', 'Berríos', 'Blanco', 'Blasco', 'Blázquez', 'Bonilla', 'Borrego', 'Botello', 'Bravo', 'Briones', 'Briseño', 'Brito', 'Bueno', 'Burgos', 'Bustamante', 'Bustos', 'Báez', 'Bétancourt', 'Caballero', 'Cabello', 'Cabrera', 'Cabán', 'Cadena', 'Caldera', 'Calderón', 'Calero', 'Calvillo', 'Calvo', 'Camacho', 'Camarillo', 'Campos', 'Canales', 'Candelaria', 'Cano', 'Cantú', 'Caraballo', 'Carbajal', 'Carballo', 'Carbonell', 'Cardenas', 'Cardona', 'Carmona', 'Caro', 'Carranza', 'Carrasco', 'Carrasquillo', 'Carrera', 'Carrero', 'Carretero', 'Carreón', 'Carrillo', 'Carrion', 'Carrión', 'Carvajal', 'Casado', 'Casanova', 'Casares', 'Casas', 'Casillas', 'Castañeda', 'Castaño', 'Castellano', 'Castellanos', 'Castillo', 'Castro', 'Casárez', 'Cavazos', 'Cazares', 'Ceballos', 'Cedillo', 'Ceja', 'Centeno', 'Cepeda', 'Cerda', 'Cervantes', 'Cervántez', 'Chacón', 'Chapa', 'Chavarría', 'Chávez', 'Cintrón', 'Cisneros', 'Clemente', 'Cobo', 'Collado', 'Collazo', 'Colunga', 'Colón', 'Concepción', 'Conde', 'Contreras', 'Cordero', 'Cornejo', 'Corona', 'Coronado', 'Corral', 'Corrales', 'Correa', 'Cortes', 'Cortez', 'Cortés', 'Costa', 'Cotto', 'Covarrubias', 'Crespo', 'Cruz', 'Cuellar', 'Cuenca', 'Cuesta', 'Cuevas', 'Curiel', 'Córdoba', 'Córdova', 'De la cruz', 'De la fuente', 'De la torre', 'Del río', 'Delacrúz', 'Delafuente', 'Delagarza', 'Delao', 'Delapaz', 'Delarosa', 'Delatorre', 'Deleón', 'Delgadillo', 'Delgado', 'Delrío', 'Delvalle', 'Diez', 'Domenech', 'Domingo', 'Domínguez', 'Domínquez', 'Duarte', 'Dueñas', 'Duran', 'Dávila', 'Díaz', 'Echevarría', 'Elizondo', 'Enríquez', 'Escalante', 'Escamilla', 'Escobar', 'Escobedo', 'Escribano', 'Escudero', 'Esparza', 'Espinal', 'Espino', 'Espinosa', 'Espinoza', 'Esquibel', 'Esquivel', 'Esteban', 'Esteve', 'Estrada', 'Estévez', 'Expósito', 'Fajardo', 'Farías', 'Feliciano', 'Fernández', 'Ferrer', 'Fierro', 'Figueroa', 'Flores', 'Flórez', 'Fonseca', 'Font', 'Franco', 'Frías', 'Fuentes', 'Gaitán', 'Galarza', 'Galindo', 'Gallardo', 'Gallego', 'Gallegos', 'Galván', 'Galán', 'Gamboa', 'Gamez', 'Gaona', 'Garay', 'García', 'Garibay', 'Garica', 'Garrido', 'Garza', 'Gastélum', 'Gaytán', 'Gil', 'Gimeno', 'Giménez', 'Girón', 'Godoy', 'Godínez', 'Gonzales', 'González', 'Gracia', 'Granado', 'Granados', 'Griego', 'Grijalva', 'Guajardo', 'Guardado', 'Guerra', 'Guerrero', 'Guevara', 'Guillen', 'Gurule', 'Gutiérrez', 'Guzmán', 'Gálvez', 'Gómez', 'Haro', 'Henríquez', 'Heredia', 'Hernandes', 'Hernando', 'Hernádez', 'Hernández', 'Herrera', 'Herrero', 'Hidalgo', 'Hinojosa', 'Holguín', 'Huerta', 'Hurtado', 'Ibarra', 'Ibáñez', 'Iglesias', 'Irizarry', 'Izquierdo', 'Jaime', 'Jaimes', 'Jaramillo', 'Jasso', 'Jiménez', 'Jimínez', 'Juan', 'Jurado', 'Juárez', 'Jáquez', 'Laboy', 'Lara', 'Laureano', 'Leal', 'Lebrón', 'Ledesma', 'Leiva', 'Lemus', 'Lerma', 'Leyva', 'León', 'Limón', 'Linares', 'Lira', 'Llamas', 'Llorente', 'Loera', 'Lomeli', 'Longoria', 'Lorente', 'Lorenzo', 'Lovato', 'Loya', 'Lozada', 'Lozano', 'Lucas', 'Lucero', 'Lucio', 'Luevano', 'Lugo', 'Luis', 'Luján', 'Luna', 'Luque', 'Lázaro', 'López', 'Macias', 'Macías', 'Madera', 'Madrid', 'Madrigal', 'Maestas', 'Magaña', 'Malave', 'Maldonado', 'Manzanares', 'Manzano', 'Marco', 'Marcos', 'Mares', 'Marrero', 'Marroquín', 'Martos', 'Martí', 'Martín', 'Martínez', 'Marín', 'Mas', 'Mascareñas', 'Mata', 'Mateo', 'Mateos', 'Matos', 'Matías', 'Maya', 'Mayorga', 'Medina', 'Medrano', 'Mejía', 'Melgar', 'Meléndez', 'Mena', 'Menchaca', 'Mendoza', 'Menéndez', 'Meraz', 'Mercado', 'Merino', 'Mesa', 'Meza', 'Miguel', 'Millán', 'Miramontes', 'Miranda', 'Mireles', 'Mojica', 'Molina', 'Mondragón', 'Monroy', 'Montalvo', 'Montañez', 'Montaño', 'Montemayor', 'Montenegro', 'Montero', 'Montes', 'Montez', 'Montoya', 'Mora', 'Moral', 'Morales', 'Moran', 'Moreno', 'Mota', 'Moya', 'Munguía', 'Murillo', 'Muro', 'Muñiz', 'Muñoz', 'Muñóz', 'Márquez', 'Méndez', 'Naranjo', 'Narváez', 'Nava', 'Navarrete', 'Navarro', 'Navas', 'Nazario', 'Negrete', 'Negrón', 'Nevárez', 'Nieto', 'Nieves', 'Niño', 'Noriega', 'Nájera', 'Núñez', 'Ocampo', 'Ocasio', 'Ochoa', 'Ojeda', 'Oliva', 'Olivares', 'Olivas', 'Oliver', 'Olivera', 'Olivo', 'Olivárez', 'Olmos', 'Olvera', 'Ontiveros', 'Oquendo', 'Ordoñez', 'Ordóñez', 'Orellana', 'Ornelas', 'Orosco', 'Orozco', 'Orta', 'Ortega', 'Ortiz', 'Ortíz', 'Osorio', 'Otero', 'Ozuna', 'Pabón', 'Pacheco', 'Padilla', 'Padrón', 'Pagan', 'Palacios', 'Palomino', 'Palomo', 'Pantoja', 'Pardo', 'Paredes', 'Parra', 'Partida', 'Pascual', 'Pastor', 'Patiño', 'Paz', 'Pedraza', 'Pedroza', 'Pelayo', 'Peláez', 'Perales', 'Peralta', 'Perea', 'Pereira', 'Peres', 'Peña', 'Pichardo', 'Pineda', 'Pizarro', 'Piña', 'Piñeiro', 'Plaza', 'Polanco', 'Polo', 'Ponce', 'Pons', 'Porras', 'Portillo', 'Posada', 'Pozo', 'Prado', 'Preciado', 'Prieto', 'Puente', 'Puga', 'Puig', 'Pulido', 'Páez', 'Pérez', 'Quesada', 'Quezada', 'Quintana', 'Quintanilla', 'Quintero', 'Quiroz', 'Quiñones', 'Quiñónez', 'Rael', 'Ramos', 'Ramírez', 'Ramón', 'Rangel', 'Rascón', 'Raya', 'Razo', 'Redondo', 'Regalado', 'Reina', 'Rendón', 'Rentería', 'Requena', 'Reséndez', 'Rey', 'Reyes', 'Reyna', 'Reynoso', 'Rico', 'Riera', 'Rincón', 'Riojas', 'Rivas', 'Rivera', 'Rivero', 'Robledo', 'Robles', 'Roca', 'Rocha', 'Rodarte', 'Rodrigo', 'Rodrígez', 'Rodríguez', 'Rodríquez', 'Roig', 'Rojas', 'Rojo', 'Roldan', 'Roldán', 'Rolón', 'Romero', 'Romo', 'Román', 'Roque', 'Ros', 'Rosa', 'Rosado', 'Rosales', 'Rosario', 'Rosas', 'Roybal', 'Rubio', 'Rueda', 'Ruelas', 'Ruiz', 'Ruvalcaba', 'Ruíz', 'Ríos', 'Saavedra', 'Saiz', 'Salas', 'Salazar', 'Salcedo', 'Salcido', 'Saldaña', 'Saldivar', 'Salgado', 'Salinas', 'Salvador', 'Samaniego', 'Sanabria', 'Sanches', 'Sancho', 'Sandoval', 'Santacruz', 'Santamaría', 'Santana', 'Santiago', 'Santillán', 'Santos', 'Sanz', 'Sarabia', 'Sauceda', 'Saucedo', 'Sedillo', 'Segovia', 'Segura', 'Sepúlveda', 'Serna', 'Serra', 'Serrano', 'Serrato', 'Sevilla', 'Sierra', 'Silva', 'Simón', 'Sisneros', 'Sola', 'Solano', 'Soler', 'Soliz', 'Solorio', 'Solorzano', 'Solís', 'Soria', 'Soriano', 'Sosa', 'Sotelo', 'Soto', 'Suárez', 'Sáenz', 'Sáez', 'Sánchez', 'Tafoya', 'Tamayo', 'Tamez', 'Tapia', 'Tejada', 'Tejeda', 'Tello', 'Terrazas', 'Terán', 'Tijerina', 'Tirado', 'Toledo', 'Tomas', 'Toro', 'Torres', 'Tovar', 'Trejo', 'Treviño', 'Trujillo', 'Téllez', 'Tórrez', 'Ulibarri', 'Ulloa', 'Urbina', 'Ureña', 'Uribe', 'Urrutia', 'Urías', 'Vaca', 'Valadez', 'Valdez', 'Valdivia', 'Valdés', 'Valencia', 'Valentín', 'Valenzuela', 'Valero', 'Valladares', 'Valle', 'Vallejo', 'Valles', 'Valverde', 'Vanegas', 'Varela', 'Vargas', 'Vega', 'Vela', 'Velasco', 'Velásquez', 'Velázquez', 'Venegas', 'Vera', 'Verdugo', 'Verduzco', 'Vergara', 'Vicente', 'Vidal', 'Viera', 'Vigil', 'Vila', 'Villa', 'Villagómez', 'Villalba', 'Villalobos', 'Villalpando', 'Villanueva', 'Villar', 'Villareal', 'Villarreal', 'Villaseñor', 'Villegas', 'Vásquez', 'Vázquez', 'Vélez', 'Véliz', 'Ybarra', 'Yáñez', 'Zambrano', 'Zamora', 'Zamudio', 'Zapata', 'Zaragoza', 'Zarate', 'Zavala', 'Zayas', 'Zelaya', 'Zepeda', 'Zúñiga', 'de Anda', 'de Jesús', 'Águilar', 'Álvarez', 'Ávalos', 'Ávila'\n\n/vendor/fzaninotto/faker/src/Faker/Provider/es_VE/Person.php:\n\t81:         'Carballo', 'Carbonell', 'Cardenas', 'Cardona', 'Carmona', 'Caro', 'Carranza', 'Carrasco', 'Carrasquillo', 'Carrera',\n\n/vendor/fzaninotto/faker/src/Faker/Provider/it_IT/Address.php:\n\t15:         'Agrigento', 'Alessandria', 'Ancona', 'Aosta', 'Arezzo', 'Ascoli Piceno', 'Asti', 'Avellino', 'Bari', 'Barletta-Andria-Trani', 'Belluno', 'Benevento', 'Bergamo', 'Biella', 'Bologna', 'Bolzano', 'Brescia', 'Brindisi', 'Cagliari', 'Caltanissetta', 'Campobasso', 'Carbonia-Iglesias', 'Caserta', 'Catania', 'Catanzaro', 'Chieti', 'Como', 'Cosenza', 'Cremona', 'Crotone', 'Cuneo', 'Enna', 'Fermo', 'Ferrara', 'Firenze', 'Foggia', 'Forlì-Cesena', 'Frosinone', 'Genova', 'Gorizia', 'Grosseto', 'Imperia', 'Isernia', 'La Spezia', 'L\\'Aquila', 'Latina', 'Lecce', 'Lecco', 'Livorno', 'Lodi', 'Lucca', 'Macerata', 'Mantova', 'Massa-Carrara', 'Matera', 'Messina', 'Milano', 'Modena', 'Monza e della Brianza', 'Napoli', 'Novara', 'Nuoro', 'Olbia-Tempio', 'Oristano', 'Padova', 'Palermo', 'Parma', 'Pavia', 'Perugia', 'Pesaro e Urbino', 'Pescara', 'Piacenza', 'Pisa', 'Pistoia', 'Pordenone', 'Potenza', 'Prato', 'Ragusa', 'Ravenna', 'Reggio Calabria', 'Reggio Emilia', 'Rieti', 'Rimini', 'Roma', 'Rovigo', 'Salerno', 'Medio Campidano', 'Sassari', 'Savona', 'Siena', 'Siracusa', 'Sondrio', 'Taranto', 'Teramo', 'Terni', 'Torino', 'Ogliastra', 'Trapani', 'Trento', 'Treviso', 'Trieste', 'Udine', 'Varese', 'Venezia', 'Verbano-Cusio-Ossola', 'Vercelli', 'Verona', 'Vibo Valentia', 'Vicenza', 'Viterbo'\n\n/vendor/fzaninotto/faker/src/Faker/Provider/it_IT/Person.php:\n\t69:         'Rizzi', 'Monti', 'Cattaneo', 'Morelli', 'Amato', 'Silvestri', 'Mazza', 'Testa', 'Grassi', 'Pellegrino', 'Carbone',\n\n/vendor/fzaninotto/faker/src/Faker/Provider/it_IT/Text.php:\n\t299: E lì si addormentò; e nel dormire, i piedi che erano di legno, gli presero fuoco e adagio adagio gli si carbonizzarono e diventarono cenere.\n\t457: – Chi lo sa che dispiacere sarebbe per il tuo vecchio padre, se ora ti facessi gettare fra quei carboni ardenti! Povero vecchio! lo compatisco!.. Etcì, etcì, etcì, – e fece altri tre starnuti.\n\t598: Si voltò a guardare e vide nel buio due figuracce nere tutte imbacuccate in due sacchi da carbone, le quali correvano dietro a lui a salti e in punta di piedi, come se fossero due fantasmi.\n\t751: – Gli andò che il burattinaio Mangiafoco mi dette alcune monete d’oro, e mi disse: «To’, portale al tuo babbo!» e io, invece, per la strada trovai una Volpe e un Gatto, due persone molto per bene, che mi dissero: «Vuoi che codeste monete diventino mille e duemila? Vieni con noi, e ti condurremo al Campo dei Miracoli». E io dissi: «Andiamo»; e loro dissero: «Fermiamoci qui all’osteria del Gambero Rosso e dopo la mezzanotte ripartiremo». Ed io, quando mi svegliai, loro non c’erano più, perché erano partiti. Allora io cominciai a camminare di notte, che era un buio che pareva impossibile, per cui trovai per la strada due assassini dentro due sacchi da carbone, che mi dissero: «Metti fuori i quattrini»; e io dissi: «Non ce n’ho»; perché le quattro monete d’oro me l’ero nascoste in bocca, e uno degli assassini si provò a mettermi le mani in bocca, e io con un morso gli staccai la mano e poi la sputai, ma invece di una mano sputai uno zampetto di gatto. E gli assassini a corrermi dietro e, io corri che ti corro, finché mi raggiunsero, e mi legarono per il collo a un albero di questo bosco, col dire: «Domani torneremo qui, e allora sarai morto e colla bocca aperta, e così ti porteremo via le monete d’oro che hai nascoste sotto la lingua».\n\t1045: In quel frattempo, passò per la strada un uomo tutto sudato e trafelato, il quale da sé tirava con gran fatica due carretti carichi di carbone.\n\t1048: – Non un soldo solo, – rispose il carbonaio, – ma te ne do quattro, a patto che tu m’aiuti a tirare fino a casa questi due carretti di carbone.\n\t1050: – Meglio per te! – rispose il carbonaio. – Allora, ragazzo mio, se ti senti davvero morir dalla fame, mangia due belle fette della tua superbia e bada di non prendere un’indigestione.\n\t1547: Questo paese non somigliava a nessun altro paese del mondo. La sua popolazione era tutta composta di ragazzi. I più vecchi avevano quattordici anni: i più giovani ne avevano otto appena. Nelle strade, un’allegria, un chiasso, uno strillìo da levar di cervello! Branchi di monelli dappertutto. Chi giocava alle noci, chi alle piastrelle, chi alla palla, chi andava in velocipede, chi sopra a un cavallino di legno; questi facevano a mosca-cieca, quegli altri si rincorrevano; altri, vestiti da pagliacci, mangiavano la stoppa accesa: chi recitava, chi cantava, chi faceva i salti mortali, chi si divertiva a camminare colle mani in terra e colle gambe in aria; chi mandava il cerchio, chi passeggiava vestito da generale coll’elmo di foglio e lo squadrone di cartapesta; chi rideva, chi urlava, chi chiamava, chi batteva le mani, chi fischiava, chi rifaceva il verso alla gallina quando ha fatto l’ovo; insomma un tal pandemonio, un tal passeraio, un tal baccano indiavolato, da doversi mettere il cotone negli orecchi per non rimanere assorditi. Su tutte le piazze si vedevano teatrini di tela, affollati di ragazzi dalla mattina alla sera, e su tutti i muri delle case si leggevano scritte col carbone delle bellissime cose come queste: Viva i balocci (invece di balocchi): non voglamo più schole (invece di non vogliamo più scuole): abbasso Larin Metica (invece di l’aritmetica) e altri fiori consimili.\n\n/vendor/laravel/framework/composer.json:\n\t26:         \"nesbot/carbon\": \"~1.20\",\n\n/vendor/laravel/framework/src/Illuminate/Auth/composer.json:\n\t21:         \"nesbot/carbon\": \"~1.20\"\n\n/vendor/laravel/framework/src/Illuminate/Auth/Passwords/DatabaseTokenRepository.php:\n\t5: use Carbon\\Carbon;\n\t110:         return ['email' => $email, 'token' => $this->hasher->make($token), 'created_at' => new Carbon];\n\t139:         return Carbon::parse($createdAt)->addSeconds($this->expires)->isPast();\n\t160:         $expiredAt = Carbon::now()->subSeconds($this->expires);\n\n/vendor/laravel/framework/src/Illuminate/Cache/composer.json:\n\t20:         \"nesbot/carbon\": \"~1.20\"\n\n/vendor/laravel/framework/src/Illuminate/Cache/DatabaseStore.php:\n\t7: use Carbon\\Carbon;\n\t85:         // expired. We will use \"Carbon\" to make this comparison with the column.\n\t86:         if (Carbon::now()->getTimestamp() >= $cache->expiration) {\n\t203:         return Carbon::now()->getTimestamp();\n\n/vendor/laravel/framework/src/Illuminate/Cache/FileStore.php:\n\t6: use Carbon\\Carbon;\n\t182:         if (Carbon::now()->getTimestamp() >= $expire) {\n\t193:         $time = ($expire - Carbon::now()->getTimestamp()) / 60;\n\t229:         $time = Carbon::now()->getTimestamp() + (int) ($minutes * 60);\n\n/vendor/laravel/framework/src/Illuminate/Cache/MemcachedStore.php:\n\t6: use Carbon\\Carbon;\n\t202:         return $minutes > 0 ? Carbon::now()->addSeconds($minutes * 60)->getTimestamp() : 0;\n\n/vendor/laravel/framework/src/Illuminate/Cache/RateLimiter.php:\n\t5: use Carbon\\Carbon;\n\t63:             $key.':lockout', Carbon::now()->getTimestamp() + ($decayMinutes * 60), $decayMinutes\n\t138:         return $this->cache->get($key.':lockout') - Carbon::now()->getTimestamp();\n\n/vendor/laravel/framework/src/Illuminate/Cache/Repository.php:\n\t8: use Carbon\\Carbon;\n\t486:             $duration = Carbon::now()->diffInSeconds(Carbon::instance($duration), false) / 60;\n\n/vendor/laravel/framework/src/Illuminate/Console/composer.json:\n\t20:         \"nesbot/carbon\": \"~1.20\",\n\n/vendor/laravel/framework/src/Illuminate/Console/Scheduling/Event.php:\n\t6: use Carbon\\Carbon;\n\t283:         $date = Carbon::now();\n\n/vendor/laravel/framework/src/Illuminate/Console/Scheduling/ManagesFrequencies.php:\n\t5: use Carbon\\Carbon;\n\t56:             $now = Carbon::now()->getTimestamp();\n\n/vendor/laravel/framework/src/Illuminate/Cookie/CookieJar.php:\n\t5: use Carbon\\Carbon;\n\t56:         $time = ($minutes == 0) ? 0 : Carbon::now()->getTimestamp() + ($minutes * 60);\n\n/vendor/laravel/framework/src/Illuminate/Database/composer.json:\n\t22:         \"nesbot/carbon\": \"~1.20\"\n\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php:\n\t5: use Carbon\\Carbon;\n\t81:         // to a DateTime / Carbon instance. This is so we will get some consistent\n\t660:      * @return \\Carbon\\Carbon\n\t671:      * @return \\Carbon\\Carbon\n\t675:         // If this value is already a Carbon instance, we shall just return it as is.\n\t676:         // This prevents us having to re-instantiate a Carbon instance when we know\n\t678:         if ($value instanceof Carbon) {\n\t686:             return new Carbon(\n\t692:         // and format a Carbon object from this timestamp. This allows flexibility\n\t695:             return Carbon::createFromTimestamp($value);\n\t699:         // Carbon instances from that format. Again, this provides for simple date\n\t700:         // fields on the database, while still supporting Carbonized conversion.\n\t702:             return Carbon::createFromFormat('Y-m-d', $value)->startOfDay();\n\t706:         // the database connection and use that format to create the Carbon object\n\t708:         return Carbon::createFromFormat(\n\n/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Concerns/HasTimestamps.php:\n\t5: use Carbon\\Carbon;\n\t79:      * @return \\Carbon\\Carbon\n\t83:         return new Carbon;\n\n/vendor/laravel/framework/src/Illuminate/Foundation/Console/DownCommand.php:\n\t5: use Carbon\\Carbon;\n\t48:             'time' => Carbon::now()->getTimestamp(),\n\n/vendor/laravel/framework/src/Illuminate/Foundation/Http/Exceptions/MaintenanceModeException.php:\n\t6: use Carbon\\Carbon;\n\t14:      * @var \\Carbon\\Carbon\n\t28:      * @var \\Carbon\\Carbon\n\t46:         $this->wentDownAt = Carbon::createFromTimestamp($time);\n\t51:             $this->willBeAvailableAt = Carbon::createFromTimestamp($time)->addSeconds($this->retryAfter);\n\n/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.php:\n\t6: use Carbon\\Carbon;\n\t158:                 'XSRF-TOKEN', $request->session()->token(), Carbon::now()->getTimestamp() + 60 * $config['lifetime'],\n\n/vendor/laravel/framework/src/Illuminate/Mail/Message.php:\n\t96:      * Add a carbon copy to the message.\n\t115:      * Add a blind carbon copy to the message.\n\n/vendor/laravel/framework/src/Illuminate/Notifications/Messages/SlackAttachment.php:\n\t5: use Carbon\\Carbon;\n\t232:      * @param  Carbon  $timestamp\n\t235:     public function timestamp(Carbon $timestamp)\n\n/vendor/laravel/framework/src/Illuminate/Queue/composer.json:\n\t23:         \"nesbot/carbon\": \"~1.20\",\n\n/vendor/laravel/framework/src/Illuminate/Queue/DatabaseQueue.php:\n\t5: use Carbon\\Carbon;\n\t244:         $expiration = Carbon::now()->subSeconds($this->retryAfter)->getTimestamp();\n\n/vendor/laravel/framework/src/Illuminate/Queue/InteractsWithTime.php:\n\t5: use Carbon\\Carbon;\n\t33:                             : Carbon::now()->addSeconds($delay)->getTimestamp();\n\t43:         return Carbon::now()->getTimestamp();\n\n/vendor/laravel/framework/src/Illuminate/Queue/Console/RestartCommand.php:\n\t5: use Carbon\\Carbon;\n\t31:         $this->laravel['cache']->forever('illuminate:queue:restart', Carbon::now()->getTimestamp());\n\n/vendor/laravel/framework/src/Illuminate/Queue/Console/WorkCommand.php:\n\t5: use Carbon\\Carbon;\n\t172:             Carbon::now()->format('Y-m-d H:i:s'),\n\n/vendor/laravel/framework/src/Illuminate/Queue/Failed/DatabaseFailedJobProvider.php:\n\t5: use Carbon\\Carbon;\n\t57:         $failed_at = Carbon::now();\n\n/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php:\n\t6: use Carbon\\Carbon;\n\t106:             $headers['X-RateLimit-Reset'] = Carbon::now()->getTimestamp() + $retryAfter;\n\n/vendor/laravel/framework/src/Illuminate/Session/composer.json:\n\t21:         \"nesbot/carbon\": \"~1.20\",\n\n/vendor/laravel/framework/src/Illuminate/Session/CookieSessionHandler.php:\n\t5: use Carbon\\Carbon;\n\t70:             if (isset($decoded['expires']) && Carbon::now()->getTimestamp() <= $decoded['expires']) {\n\t85:             'expires' => Carbon::now()->addMinutes($this->minutes)->getTimestamp(),\n\n/vendor/laravel/framework/src/Illuminate/Session/DatabaseSessionHandler.php:\n\t5: use Carbon\\Carbon;\n\t112:             $session->last_activity < Carbon::now()->subMinutes($this->minutes)->getTimestamp();\n\t173:             'last_activity' => Carbon::now()->getTimestamp(),\n\t264:         $this->getQuery()->where('last_activity', '<=', Carbon::now()->getTimestamp() - $lifetime)->delete();\n\n/vendor/laravel/framework/src/Illuminate/Session/FileSessionHandler.php:\n\t5: use Carbon\\Carbon;\n\t70:             if (filemtime($path) >= Carbon::now()->subMinutes($this->minutes)->getTimestamp()) {\n\n/vendor/laravel/framework/src/Illuminate/Session/Middleware/StartSession.php:\n\t6: use Carbon\\Carbon;\n\t204:         return $config['expire_on_close'] ? 0 : Carbon::now()->addMinutes($config['lifetime']);\n\n/vendor/nesbot/carbon/composer.json:\n\t2:     \"name\": \"nesbot/carbon\",\n\t10:     \"homepage\": \"http://carbon.nesbot.com\",\n\t12:         \"issues\": \"https://github.com/briannesbitt/Carbon/issues\",\n\t13:         \"source\": \"https://github.com/briannesbitt/Carbon\"\n\t33:             \"Carbon\\\\\": \"src/Carbon/\"\n\n/vendor/nesbot/carbon/readme.md:\n\t1: # Carbon\n\t3: [![Latest Stable Version](https://poser.pugx.org/nesbot/carbon/v/stable.png)](https://packagist.org/packages/nesbot/carbon)\n\t4: [![Total Downloads](https://poser.pugx.org/nesbot/carbon/downloads.png)](https://packagist.org/packages/nesbot/carbon)\n\t5: [![Build Status](https://travis-ci.org/briannesbitt/Carbon.svg?branch=master)](https://travis-ci.org/briannesbitt/Carbon)\n\t7: [![codecov.io](https://codecov.io/github/briannesbitt/Carbon/coverage.svg?branch=master)](https://codecov.io/github/briannesbitt/Carbon?branch=master)\n\t8: [![PHP-Eye](https://php-eye.com/badge/nesbot/carbon/tested.svg?style=flat)](https://php-eye.com/package/nesbot/carbon)\n\t10: A simple PHP API extension for DateTime. [http://carbon.nesbot.com](http://carbon.nesbot.com)\n\t13: use Carbon\\Carbon;\n\t15: printf(\"Right now is %s\", Carbon::now()->toDateTimeString());\n\t16: printf(\"Right now in Vancouver is %s\", Carbon::now('America/Vancouver'));  //implicit __toString()\n\t17: $tomorrow = Carbon::now()->addDay();\n\t18: $lastWeek = Carbon::now()->subWeek();\n\t19: $nextSummerOlympics = Carbon::createFromDate(2012)->addYears(4);\n\t21: $officialDate = Carbon::now()->toRfc2822String();\n\t23: $howOldAmI = Carbon::createFromDate(1975, 5, 21)->age;\n\t25: $noonTodayLondonTime = Carbon::createFromTime(12, 0, 0, 'Europe/London');\n\t27: $worldWillEnd = Carbon::createFromDate(2012, 12, 21, 'GMT');\n\t30: Carbon::setTestNow(Carbon::createFromDate(2000, 1, 1));\n\t33: if (Carbon::now()->gte($worldWillEnd)) {\n\t38: Carbon::setTestNow();\n\t40: if (Carbon::now()->isWeekend()) {\n\t43: echo Carbon::now()->subMinutes(2)->diffForHumans(); // '2 minutes ago'\n\t48: $daysSinceEpoch = Carbon::createFromTimestamp(0)->diffInDays();\n\t56: $ composer require nesbot/carbon\n\t62:         \"nesbot/carbon\": \"~1.21\"\n\t71: use Carbon\\Carbon;\n\t73: printf(\"Now: %s\", Carbon::now());\n\t79: Why are you not using [composer](http://getcomposer.org/)? Download [Carbon.php](https://github.com/briannesbitt/Carbon/blob/master/src/Carbon/Carbon.php) from the repo and save the file into your project path somewhere.\n\t83: require 'path/to/Carbon.php';\n\t85: use Carbon\\Carbon;\n\t87: printf(\"Now: %s\", Carbon::now());\n\t92: [http://carbon.nesbot.com/docs](http://carbon.nesbot.com/docs)\n\n/vendor/nesbot/carbon/src/Carbon/Carbon.php:\n\t4:  * This file is part of the Carbon package.\n\t12: namespace Carbon;\n\t14: use Carbon\\Exceptions\\InvalidDateException;\n\t53: class Carbon extends DateTime\n\t153:      * A test Carbon instance to be returned when now instances are created.\n\t155:      * @var \\Carbon\\Carbon\n\t263:      * Create a new Carbon instance.\n\t295:      * Create a Carbon instance from a DateTime one.\n\t311:      * Create a carbon instance from a string.\n\t314:      * as it allows you to do Carbon::parse('Monday next week')->fn() rather\n\t315:      * than (new Carbon('Monday next week'))->fn().\n\t328:      * Get a Carbon instance for the current date and time.\n\t340:      * Create a Carbon instance for today.\n\t352:      * Create a Carbon instance for tomorrow.\n\t364:      * Create a Carbon instance for yesterday.\n\t376:      * Create a Carbon instance for the greatest supported date.\n\t392:      * Create a Carbon instance for the lowest supported date.\n\t408:      * Create a new Carbon instance from a specific date and time.\n\t475:      * Create a new safe Carbon instance from a specific date and time.\n\t497:      * @throws \\Carbon\\Exceptions\\InvalidDateException\n\t528:      * Create a Carbon instance from just a date. The time portion is set to now.\n\t543:      * Create a Carbon instance from just a time. The date portion is set to today.\n\t558:      * Create a Carbon instance from a specific format.\n\t606:      * Create a Carbon instance from a timestamp.\n\t619:      * Create a Carbon instance from an UTC timestamp.\n\t645:      * Get a part of the Carbon object\n\t727:      * Set a part of the Carbon object\n\t856:      * @see https://github.com/briannesbitt/Carbon/issues/539\n\t1018:      * Set a Carbon instance (real or mock) to be returned when a \"now\"\n\t1021:      *   - A call to the static now() method, ex. Carbon::now()\n\t1022:      *   - When a null (or blank string) is passed to the constructor or parse(), ex. new Carbon(null)\n\t1023:      *   - When the string \"now\" is passed to the constructor or parse(), ex. new Carbon('now')\n\t1024:      *   - When a string containing the desired time is passed to Carbon::parse().\n\t1032:      * @param \\Carbon\\Carbon|string|null $testNow\n\t1040:      * Get the Carbon instance (real or mock) to be returned when a \"now\"\n\t1193:      * Reset the format used to the default when type juggling a Carbon instance to a string\n\t1201:      * Set the default format used when type juggling a Carbon instance to a string\n\t1387:      * @param Carbon $dt\n\t1391:     public function eq(Carbon $dt)\n\t1399:      * @param Carbon $dt\n\t1405:     public function equalTo(Carbon $dt)\n\t1413:      * @param Carbon $dt\n\t1417:     public function ne(Carbon $dt)\n\t1425:      * @param Carbon $dt\n\t1431:     public function notEqualTo(Carbon $dt)\n\t1439:      * @param Carbon $dt\n\t1443:     public function gt(Carbon $dt)\n\t1451:      * @param Carbon $dt\n\t1457:     public function greaterThan(Carbon $dt)\n\t1465:      * @param Carbon $dt\n\t1469:     public function gte(Carbon $dt)\n\t1477:      * @param Carbon $dt\n\t1483:     public function greaterThanOrEqualTo(Carbon $dt)\n\t1491:      * @param Carbon $dt\n\t1495:     public function lt(Carbon $dt)\n\t1503:      * @param Carbon $dt\n\t1509:     public function lessThan(Carbon $dt)\n\t1517:      * @param Carbon $dt\n\t1521:     public function lte(Carbon $dt)\n\t1529:      * @param Carbon $dt\n\t1535:     public function lessThanOrEqualTo(Carbon $dt)\n\t1543:      * @param Carbon $dt1\n\t1544:      * @param Carbon $dt2\n\t1549:     public function between(Carbon $dt1, Carbon $dt2, $equal = true)\n\t1567:      * @param Carbon $dt1\n\t1568:      * @param Carbon $dt2\n\t1572:     public function closest(Carbon $dt1, Carbon $dt2)\n\t1580:      * @param Carbon $dt1\n\t1581:      * @param Carbon $dt2\n\t1585:     public function farthest(Carbon $dt1, Carbon $dt2)\n\t1593:      * @param \\Carbon\\Carbon|null $dt\n\t1597:     public function min(Carbon $dt = null)\n\t1607:      * @param \\Carbon\\Carbon|null $dt\n\t1613:     public function minimum(Carbon $dt = null)\n\t1621:      * @param \\Carbon\\Carbon|null $dt\n\t1625:     public function max(Carbon $dt = null)\n\t1635:      * @param \\Carbon\\Carbon|null $dt\n\t1641:     public function maximum(Carbon $dt = null)\n\t1802:      * @param \\Carbon\\Carbon|null $dt     The instance to compare with or null to use current day.\n\t1806:     public function isSameAs($format, Carbon $dt = null)\n\t1826:      * @param \\Carbon\\Carbon|null $dt The instance to compare with or null to use current day.\n\t1830:     public function isSameYear(Carbon $dt = null)\n\t1848:      * @param \\Carbon\\Carbon|null $dt         The instance to compare with or null to use current day.\n\t1853:     public function isSameMonth(Carbon $dt = null, $ofSameYear = false)\n\t1863:      * @param \\Carbon\\Carbon $dt\n\t1867:     public function isSameDay(Carbon $dt)\n\t2557:      * @param \\Carbon\\Carbon|null $dt\n\t2562:     public function diffInYears(Carbon $dt = null, $abs = true)\n\t2572:      * @param \\Carbon\\Carbon|null $dt\n\t2577:     public function diffInMonths(Carbon $dt = null, $abs = true)\n\t2587:      * @param \\Carbon\\Carbon|null $dt\n\t2592:     public function diffInWeeks(Carbon $dt = null, $abs = true)\n\t2600:      * @param \\Carbon\\Carbon|null $dt\n\t2605:     public function diffInDays(Carbon $dt = null, $abs = true)\n\t2616:      * @param \\Carbon\\Carbon|null $dt\n\t2621:     public function diffInDaysFiltered(Closure $callback, Carbon $dt = null, $abs = true)\n\t2623:         return $this->diffFiltered(CarbonInterval::day(), $callback, $dt, $abs);\n\t2630:      * @param \\Carbon\\Carbon|null $dt\n\t2635:     public function diffInHoursFiltered(Closure $callback, Carbon $dt = null, $abs = true)\n\t2637:         return $this->diffFiltered(CarbonInterval::hour(), $callback, $dt, $abs);\n\t2643:      * @param CarbonInterval $ci       An interval to traverse by\n\t2645:      * @param Carbon|null    $dt\n\t2650:     public function diffFiltered(CarbonInterval $ci, Closure $callback, Carbon $dt = null, $abs = true)\n\t2664:             return call_user_func($callback, Carbon::instance($date));\n\t2675:      * @param \\Carbon\\Carbon|null $dt\n\t2680:     public function diffInWeekdays(Carbon $dt = null, $abs = true)\n\t2682:         return $this->diffInDaysFiltered(function (Carbon $date) {\n\t2690:      * @param \\Carbon\\Carbon|null $dt\n\t2695:     public function diffInWeekendDays(Carbon $dt = null, $abs = true)\n\t2697:         return $this->diffInDaysFiltered(function (Carbon $date) {\n\t2705:      * @param \\Carbon\\Carbon|null $dt\n\t2710:     public function diffInHours(Carbon $dt = null, $abs = true)\n\t2718:      * @param \\Carbon\\Carbon|null $dt\n\t2723:     public function diffInMinutes(Carbon $dt = null, $abs = true)\n\t2731:      * @param \\Carbon\\Carbon|null $dt\n\t2736:     public function diffInSeconds(Carbon $dt = null, $abs = true)\n\t2783:      * @param Carbon|null $other\n\t2789:     public function diffForHumans(Carbon $other = null, $absolute = false, $short = false)\n\t3282:      * @param \\Carbon\\Carbon|null $dt\n\t3286:     public function average(Carbon $dt = null)\n\t3296:      * @param \\Carbon\\Carbon|null $dt The instance to compare with or null to use current day.\n\t3300:     public function isBirthday(Carbon $dt = null)\n\n/vendor/nesbot/carbon/src/Carbon/CarbonInterval.php:\n\t4:  * This file is part of the Carbon package.\n\t12: namespace Carbon;\n\t35:  * @method static CarbonInterval years($years = 1) Create instance specifying a number of years.\n\t36:  * @method static CarbonInterval year($years = 1) Alias for years()\n\t37:  * @method static CarbonInterval months($months = 1) Create instance specifying a number of months.\n\t38:  * @method static CarbonInterval month($months = 1) Alias for months()\n\t39:  * @method static CarbonInterval weeks($weeks = 1) Create instance specifying a number of weeks.\n\t40:  * @method static CarbonInterval week($weeks = 1) Alias for weeks()\n\t41:  * @method static CarbonInterval days($days = 1) Create instance specifying a number of days.\n\t42:  * @method static CarbonInterval dayz($days = 1) Alias for days()\n\t43:  * @method static CarbonInterval day($days = 1) Alias for days()\n\t44:  * @method static CarbonInterval hours($hours = 1) Create instance specifying a number of hours.\n\t45:  * @method static CarbonInterval hour($hours = 1) Alias for hours()\n\t46:  * @method static CarbonInterval minutes($minutes = 1) Create instance specifying a number of minutes.\n\t47:  * @method static CarbonInterval minute($minutes = 1) Alias for minutes()\n\t48:  * @method static CarbonInterval seconds($seconds = 1) Create instance specifying a number of seconds.\n\t49:  * @method static CarbonInterval second($seconds = 1) Alias for seconds()\n\t50:  * @method CarbonInterval years() years($years = 1) Set the years portion of the current interval.\n\t51:  * @method CarbonInterval year() year($years = 1) Alias for years().\n\t52:  * @method CarbonInterval months() months($months = 1) Set the months portion of the current interval.\n\t53:  * @method CarbonInterval month() month($months = 1) Alias for months().\n\t54:  * @method CarbonInterval weeks() weeks($weeks = 1) Set the weeks portion of the current interval.  Will overwrite dayz value.\n\t55:  * @method CarbonInterval week() week($weeks = 1) Alias for weeks().\n\t56:  * @method CarbonInterval days() days($days = 1) Set the days portion of the current interval.\n\t57:  * @method CarbonInterval dayz() dayz($days = 1) Alias for days().\n\t58:  * @method CarbonInterval day() day($days = 1) Alias for days().\n\t59:  * @method CarbonInterval hours() hours($hours = 1) Set the hours portion of the current interval.\n\t60:  * @method CarbonInterval hour() hour($hours = 1) Alias for hours().\n\t61:  * @method CarbonInterval minutes() minutes($minutes = 1) Set the minutes portion of the current interval.\n\t62:  * @method CarbonInterval minute() minute($minutes = 1) Alias for minutes().\n\t63:  * @method CarbonInterval seconds() seconds($seconds = 1) Set the seconds portion of the current interval.\n\t64:  * @method CarbonInterval second() second($seconds = 1) Alias for seconds().\n\t66: class CarbonInterval extends DateInterval\n\t110:      * Create a new CarbonInterval instance.\n\t128:         $specDays += $weeks > 0 ? $weeks * Carbon::DAYS_PER_WEEK : 0;\n\t149:      * Create a new CarbonInterval instance from specific values.\n\t151:      * syntax as it allows you to do CarbonInterval::create(1)->fn() rather than\n\t152:      * (new CarbonInterval(1))->fn().\n\t170:      * Provide static helpers to create instances.  Allows CarbonInterval::years(3).\n\t217:      * Create a CarbonInterval instance from a DateInterval one.  Can not instance\n\t308:      * Get a part of the CarbonInterval object\n\t338:                 return (int) floor($this->d / Carbon::DAYS_PER_WEEK);\n\t342:                 return $this->d % Carbon::DAYS_PER_WEEK;\n\t350:      * Set a part of the CarbonInterval object\n\t369:                 $this->d = $val * Carbon::DAYS_PER_WEEK;\n\t400:         $this->dayz = ($weeks * Carbon::DAYS_PER_WEEK) + $days;\n\t406:      * Allow fluent calls on the setters... CarbonInterval::years(3)->months(5)->day().\n\t433:                 $this->dayz = $arg * Carbon::DAYS_PER_WEEK;\n\n/vendor/nesbot/carbon/src/Carbon/Exceptions/InvalidDateException.php:\n\t4:  * This file is part of the Carbon package.\n\t12: namespace Carbon\\Exceptions;\n\n/vendor/nesbot/carbon/src/Carbon/Lang/af.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ar.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/az.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/bg.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/bn.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ca.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/cs.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/da.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/de.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/el.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/en.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/eo.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/es.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/et.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/eu.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/fa.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/fi.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/fo.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/fr.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/gl.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/he.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/hr.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/hu.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/hy.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/id.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/it.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ja.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ka.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/km.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ko.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/lt.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/lv.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/mk.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ms.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/nl.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/no.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/pl.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/pt.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/pt_BR.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ro.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ru.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/sk.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/sl.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/sq.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/sr.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/sr_Cyrl_ME.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/sr_Latn_ME.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/sr_ME.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/sv.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/th.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/tr.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/uk.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/ur.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/uz.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/vi.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/zh.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/nesbot/carbon/src/Carbon/Lang/zh_TW.php:\n\t4:  * This file is part of the Carbon package.\n\n/vendor/swiftmailer/swiftmailer/lib/classes/Swift/Mime/Message.php:\n\t179:      * Recipients set in this field will receive a 'carbon-copy' of this message.\n\t201:      * Recipients set in this field will receive a 'blind-carbon-copy' of this\n\n/vendor/tymon/jwt-auth/composer.json:\n\t27:         \"nesbot/carbon\": \"~1.0\"\n\n/vendor/tymon/jwt-auth/src/Utils.php:\n\t14: use Carbon\\Carbon;\n\t19:      * Get the Carbon instance for the current time.\n\t21:      * @return \\Carbon\\Carbon\n\t25:         return Carbon::now();\n\t29:      * Get the Carbon instance for the timestamp.\n\t32:      * @return \\Carbon\\Carbon\n\t36:         return Carbon::createFromTimeStampUTC($timestamp);\n\n/vendor/tymon/jwt-auth/tests/BlacklistTest.php:\n\t15: use Carbon\\Carbon;\n\t29:         Carbon::setTestNow(Carbon::createFromTimeStampUTC(123));\n\n/vendor/tymon/jwt-auth/tests/PayloadFactoryTest.php:\n\t15: use Carbon\\Carbon;\n\t30:         Carbon::setTestNow(Carbon::createFromTimeStampUTC(123));\n\n/vendor/tymon/jwt-auth/tests/PayloadTest.php:\n\t15: use Carbon\\Carbon;\n\t29:         Carbon::setTestNow(Carbon::createFromTimeStampUTC(123));\n\n/vendor/tymon/jwt-auth/tests/Providers/JWT/NamshiAdapterTest.php:\n\t15: use Carbon\\Carbon;\n\t22:         Carbon::setTestNow(Carbon::createFromTimeStampUTC(123));\n\n/vendor/tymon/jwt-auth/tests/Validators/PayloadValidatorTest.php:\n\t14: use Carbon\\Carbon;\n\t21:         Carbon::setTestNow(Carbon::createFromTimeStampUTC(123));\n\nFound 488 matches in 111 files \n\n","undoManager":{"mark":-2,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "],"id":3},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001uiradio\u0001 in\u0001/\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/node_modules/keen-ui/dist/keen-ui.js:",""]},{"start":{"row":3,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["\t234:     UiRadioGroup: {","\t1332: Component.options.__file = \"C:\\\\code\\\\packages\\\\keen-ui\\\\src\\\\UiRadio.vue\"","\t1334: if (Component.options.functional) {console.error(\"[vue-loader] UiRadio.vue: functional components are not supported with templates, they should use render functions.\")}","\t4611: Component.options.__file = \"C:\\\\code\\\\packages\\\\keen-ui\\\\src\\\\UiRadioGroup.vue\"","\t4613: if (Component.options.functional) {console.error(\"[vue-loader] UiRadioGroup.vue: functional components are not supported with templates, they should use render functions.\")}","\t8249: var _UiRadio = __webpack_require__(45);","\t8251: var _UiRadio2 = _interopRequireDefault(_UiRadio);","\t8279:                 return _config2.default.data.UiRadioGroup.keys;","\t8356:         UiRadio: _UiRadio2.default","\t15015: exports.UiTooltip = exports.UiToolbar = exports.UiTextbox = exports.UiTabs = exports.UiTab = exports.UiSwitch = exports.UiSnackbarContainer = exports.UiSnackbar = exports.UiSlider = exports.UiSelect = exports.UiRippleInk = exports.UiRadioGroup = exports.UiRadio = exports.UiProgressLinear = exports.UiProgressCircular = exports.UiPreloader = exports.UiPopover = exports.UiModal = exports.UiMenu = exports.UiIconButton = exports.UiIcon = exports.UiFileupload = exports.UiFab = exports.UiDatepicker = exports.UiConfirm = exports.UiCollapsible = exports.UiCheckboxGroup = exports.UiCheckbox = exports.UiCalendar = exports.UiButton = exports.UiAutocomplete = exports.UiAlert = undefined;","\t15095: var _UiRadio = __webpack_require__(45);","\t15097: var _UiRadio2 = _interopRequireDefault(_UiRadio);","\t15099: var _UiRadioGroup = __webpack_require__(76);","\t15101: var _UiRadioGroup2 = _interopRequireDefault(_UiRadioGroup);","\t15169:     UiRadio: _UiRadio2.default,","\t15170:     UiRadioGroup: _UiRadioGroup2.default,","\t15203:         Vue.component('ui-radio', _UiRadio2.default);","\t15204:         Vue.component('ui-radio-group', _UiRadioGroup2.default);","\t15243: exports.UiRadio = _UiRadio2.default;","\t15244: exports.UiRadioGroup = _UiRadioGroup2.default;","",""]},{"start":{"row":24,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiAlert.js:","\t1892:     UiRadioGroup: {","",""]},{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiAutocomplete.js:",""]},{"start":{"row":28,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["\t1238:     UiRadioGroup: {","",""]},{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiButton.js:",""]},{"start":{"row":31,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":33,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiCalendar.js:",""]},{"start":{"row":34,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":36,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiCheckboxGroup.js:",""]},{"start":{"row":37,"column":0},"end":{"row":39,"column":0},"action":"insert","lines":["\t1765:     UiRadioGroup: {","",""]},{"start":{"row":39,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiCollapsible.js:",""]},{"start":{"row":40,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":42,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiConfirm.js:",""]},{"start":{"row":43,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":45,"column":0},"end":{"row":46,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiDatepicker.js:",""]},{"start":{"row":46,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiFab.js:",""]},{"start":{"row":49,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":51,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiFileupload.js:","\t1892:     UiRadioGroup: {","",""]},{"start":{"row":54,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiIconButton.js:",""]},{"start":{"row":55,"column":0},"end":{"row":57,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":57,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiMenu.js:",""]},{"start":{"row":58,"column":0},"end":{"row":60,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":60,"column":0},"end":{"row":61,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiModal.js:",""]},{"start":{"row":61,"column":0},"end":{"row":63,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":63,"column":0},"end":{"row":64,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiRadio.js:",""]},{"start":{"row":64,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["\t12: \t\texports[\"UiRadio\"] = factory();","\t14: \t\troot[\"KeenUI\"] = root[\"KeenUI\"] || {}, root[\"KeenUI\"][\"UiRadio\"] = factory();","\t103: Component.options.__file = \"C:\\\\code\\\\packages\\\\keen-ui\\\\src\\\\UiRadio.vue\"","\t105: if (Component.options.functional) {console.error(\"[vue-loader] UiRadio.vue: functional components are not supported with templates, they should use render functions.\")}","\t286: \t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-1c88e05a!./../node_modules/sass-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./UiRadio.vue\", function() {","\t287: \t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-1c88e05a!./../node_modules/sass-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./UiRadio.vue\");","",""]},{"start":{"row":71,"column":0},"end":{"row":88,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiRadioGroup.js:","\t12: \t\texports[\"UiRadioGroup\"] = factory();","\t14: \t\troot[\"KeenUI\"] = root[\"KeenUI\"] || {}, root[\"KeenUI\"][\"UiRadioGroup\"] = factory();","\t164: Component.options.__file = \"C:\\\\code\\\\packages\\\\keen-ui\\\\src\\\\UiRadio.vue\"","\t166: if (Component.options.functional) {console.error(\"[vue-loader] UiRadio.vue: functional components are not supported with templates, they should use render functions.\")}","\t379: \t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-1c88e05a!./../node_modules/sass-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./UiRadio.vue\", function() {","\t380: \t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-1c88e05a!./../node_modules/sass-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./UiRadio.vue\");","\t408: Component.options.__file = \"C:\\\\code\\\\packages\\\\keen-ui\\\\src\\\\UiRadioGroup.vue\"","\t410: if (Component.options.functional) {console.error(\"[vue-loader] UiRadioGroup.vue: functional components are not supported with templates, they should use render functions.\")}","\t462: var _UiRadio = __webpack_require__(139);","\t464: var _UiRadio2 = _interopRequireDefault(_UiRadio);","\t492:                 return _config2.default.data.UiRadioGroup.keys;","\t569:         UiRadio: _UiRadio2.default","\t665: \t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-0eea8cf5!./../node_modules/sass-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./UiRadioGroup.vue\", function() {","\t666: \t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-0eea8cf5!./../node_modules/sass-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./UiRadioGroup.vue\");","\t939:     UiRadioGroup: {","",""]},{"start":{"row":88,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiSelect.js:",""]},{"start":{"row":89,"column":0},"end":{"row":91,"column":0},"action":"insert","lines":["\t1802:     UiRadioGroup: {","",""]},{"start":{"row":91,"column":0},"end":{"row":92,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiSnackbar.js:",""]},{"start":{"row":92,"column":0},"end":{"row":94,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":94,"column":0},"end":{"row":95,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiSnackbarContainer.js:",""]},{"start":{"row":95,"column":0},"end":{"row":97,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":97,"column":0},"end":{"row":98,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiTabs.js:",""]},{"start":{"row":98,"column":0},"end":{"row":100,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":100,"column":0},"end":{"row":101,"column":0},"action":"insert","lines":["/node_modules/keen-ui/lib/UiToolbar.js:",""]},{"start":{"row":101,"column":0},"end":{"row":103,"column":0},"action":"insert","lines":["\t1892:     UiRadioGroup: {","",""]},{"start":{"row":103,"column":0},"end":{"row":104,"column":0},"action":"insert","lines":["/node_modules/keen-ui/src/config.js:",""]},{"start":{"row":104,"column":0},"end":{"row":106,"column":0},"action":"insert","lines":["\t36:     UiRadioGroup: {","",""]},{"start":{"row":106,"column":0},"end":{"row":107,"column":0},"action":"insert","lines":["/node_modules/keen-ui/src/index.js:",""]},{"start":{"row":107,"column":0},"end":{"row":116,"column":0},"action":"insert","lines":["\t22: import UiRadio from './UiRadio.vue';","\t23: import UiRadioGroup from './UiRadioGroup.vue';","\t56:     UiRadio,","\t57:     UiRadioGroup,","\t90:         Vue.component('ui-radio', UiRadio);","\t91:         Vue.component('ui-radio-group', UiRadioGroup);","\t132: export { UiRadio };","\t133: export { UiRadioGroup };","",""]},{"start":{"row":116,"column":0},"end":{"row":121,"column":0},"action":"insert","lines":["/node_modules/keen-ui/src/UiRadioGroup.vue:","\t42: import UiRadio from './UiRadio.vue';","\t66:                 return config.data.UiRadioGroup.keys;","\t160:         UiRadio","",""]},{"start":{"row":121,"column":0},"end":{"row":122,"column":0},"action":"insert","lines":["/public/js/app.js:",""]},{"start":{"row":122,"column":0},"end":{"row":143,"column":0},"action":"insert","lines":["\t4859:     UiRadioGroup: {","\t5957: Component.options.__file = \"C:\\\\code\\\\packages\\\\keen-ui\\\\src\\\\UiRadio.vue\"","\t5959: if (Component.options.functional) {console.error(\"[vue-loader] UiRadio.vue: functional components are not supported with templates, they should use render functions.\")}","\t9236: Component.options.__file = \"C:\\\\code\\\\packages\\\\keen-ui\\\\src\\\\UiRadioGroup.vue\"","\t9238: if (Component.options.functional) {console.error(\"[vue-loader] UiRadioGroup.vue: functional components are not supported with templates, they should use render functions.\")}","\t12874: var _UiRadio = __webpack_require__(45);","\t12876: var _UiRadio2 = _interopRequireDefault(_UiRadio);","\t12904:                 return _config2.default.data.UiRadioGroup.keys;","\t12981:         UiRadio: _UiRadio2.default","\t19640: exports.UiTooltip = exports.UiToolbar = exports.UiTextbox = exports.UiTabs = exports.UiTab = exports.UiSwitch = exports.UiSnackbarContainer = exports.UiSnackbar = exports.UiSlider = exports.UiSelect = exports.UiRippleInk = exports.UiRadioGroup = exports.UiRadio = exports.UiProgressLinear = exports.UiProgressCircular = exports.UiPreloader = exports.UiPopover = exports.UiModal = exports.UiMenu = exports.UiIconButton = exports.UiIcon = exports.UiFileupload = exports.UiFab = exports.UiDatepicker = exports.UiConfirm = exports.UiCollapsible = exports.UiCheckboxGroup = exports.UiCheckbox = exports.UiCalendar = exports.UiButton = exports.UiAutocomplete = exports.UiAlert = undefined;","\t19720: var _UiRadio = __webpack_require__(45);","\t19722: var _UiRadio2 = _interopRequireDefault(_UiRadio);","\t19724: var _UiRadioGroup = __webpack_require__(76);","\t19726: var _UiRadioGroup2 = _interopRequireDefault(_UiRadioGroup);","\t19794:     UiRadio: _UiRadio2.default,","\t19795:     UiRadioGroup: _UiRadioGroup2.default,","\t19828:         Vue.component('ui-radio', _UiRadio2.default);","\t19829:         Vue.component('ui-radio-group', _UiRadioGroup2.default);","\t19868: exports.UiRadio = _UiRadio2.default;","\t19869: exports.UiRadioGroup = _UiRadioGroup2.default;","",""]},{"start":{"row":143,"column":0},"end":{"row":144,"column":0},"action":"insert","lines":["Found 114 matches in 25 files ",""]}],[{"start":{"row":144,"column":0},"end":{"row":145,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":0,"column":29},"end":{"row":0,"column":61},"action":"insert","lines":[" (Found 114 matches in 25 files)"]}],[{"start":{"row":622,"column":0},"end":{"row":623,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":0,"column":34},"end":{"row":0,"column":67},"action":"insert","lines":[" (Found 488 matches in 111 files)"]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":623,"column":0},"end":{"row":623,"column":0},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"guessTabSize":false,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1501661160232}